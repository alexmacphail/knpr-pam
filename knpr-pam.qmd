---
title: "Report on the use of passive acoustic monitoring in Kluane National Park Reserve"
format:
  html:
    grid:
      margin-width: 300px
navbar: right
theme: cosmo
date: "`r format(Sys.time(), '%d %B, %Y')`"
author: 
  - name: "Alex MacPhail"
    affiliation: "Biodiversity Pathways Ltd."
  - name: "Camila Hurtado"
    affiliation: "Biodiversity Pathways Ltd."
  - name: "Jeni Rudisill"
    affiliation: "Parks Canada"
  - name: "Lisa Larson"
    affiliation: "Parks Canada"
editor: visual
bibliography: references.bib
nocite: '@*'
toc: true
toc-depth: 3
toc-expand: true
toc-location: left
styles: styles.css
github: https://github.com/biodiversitypathways/knpr-pam
---

![](kluane-banner.jpg){style="float:left`;" fig-alt="Photo of a glacier" fig-align="center"}

```{r}
#| label: Load packages and authenticate to WildTrax
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(tidyverse)
library(leaflet)
library(wildrtrax)
library(sf)
library(ggridges)
library(scales)
library(kableExtra)
library(plotly)
library(DT)
library(vegan)

wt_auth()

load('knpr.RData')
#save.image('knpr.RData')
#cirrus_knpr_recs  <- readRDS('knprcirrus.RDS')
```

```{r}
#| label: Download data from WildTrax
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| include: true

knpr_projects <- wildrtrax::wt_get_download_summary(sensor = 'ARU') |>
  filter(grepl('Kluane', project)) |>
  select(project_id) |>
  pull()

knpr_main <-
  map_dfr(
    .x = knpr_projects,
    .f = ~ wildrtrax::wt_download_report(
      project_id = .x,
      sensor_id = "ARU",
      weather_cols = T,
      reports = "main"
    )
  )
```

# Abstract

Passive acoustic monitoring has proven to be a valuable tool for studying vocalizing species. Environmental sensors are becoming increasingly easy to program and can autonomously generate extensive data sets of the soundscape, becoming an invaluable resource for ecological integrity monitoring. Kluane National Park Reserve deployed autonomous recording units (ARUs) at `r locs_summary |> filter(Treatment == "Ecological Integrity") |> tally()` locations (`r locs_summary |> filter(Treatment == "Ecological Integrity") |> select(Site) |> distinct() |> pull() |> paste(collapse = ", ")`) as part of the Ecological Integrity Monitoring Program (2015–2024) and `r locs_summary |> filter(grepl("Prescribed Burn",Treatment)) |> tally()` contributing to the National Prescribed Burn Protocol. ARUs detected `r distinct_spp |> tally() + 2` species, including both birds and mammals. Trends show stable relative abundance at the Auriol Site and consistent species richness across years in the areas slated for prescribed burns in 2025. While bat data revealed some positive detections of Little Brown Bat, significant deployement improvements are needed to maximize detection rates and data quality. Sustained monitoring of these areas following prescribed burns, incorporating enhanced equipment protocols to optimize detections of bats, as well as broader scope in recording data collection, will optimize the effectiveness of the ongoing monitoring program. Future data collection can be facilitated by more advanced models and analyses.

::: {.callout-note collapse="true" style="background-color: #f4f4f4; padding: 20px;"}
This report is dynamically generated, meaning its results may evolve with the addition of new data or further analyses. For the most recent updates, refer to the publication date and feel free to reach out to the authors.
:::

# Land Acknowledgement

In the spirit of Reconciliation, we respectfully acknowledge that the lands of Kluane National Park Reserve where this study took place are the traditional territories of the Southern Tutchone people represented in the Kluane region by the Champagne and Aishihik First Nations and the Kluane First Nation. Champagne and Aishihik First Nations, Kluane First Nation and Parks Canada are jointly responsible for the management of Kluane's natural and cultural resources.

# Introduction

Human activities have been identified as key pressures and contributors to the global decline in forest wildlife (@allan2017recent). The repercussions of habitat fragmentation (@fahrig2003effects) and loss (@hanski2011habitat), climate change (@mantyka2012interactions, @sattar2021review, @abrahms2023climate), and increased access to sensitive areas exert direct and indirect pressures on forest biodiversity, particularly in managed regions in Canada (@lemieux2011state).

Forests of the Kluane National Park and Reserve are currently experiencing a severe fire deficit, with a 71% departure in the estimated area burned from the historic area burned (see [2017 Kluane National Park and Reserve State of the Park Technical Compendium](https://parks.canada.ca/agence-agency/bib-lib/rapports-reports/~/media/4334d912b761468398c45fa006552cd1.ashx)). The area also saw a significant spruce bark beetle infestation over the 1990s to 2000s. It is estimated that over 49,000 ha were affected and, on average, almost half of the mature spruce trees were killed in affected forests. Given that climate change scenarios consistently indicate hotter temperatures and a longer growing season for Kluane forests, disturbance from wildfires, insect outbreaks, and other direct and indirect effects, are likely to cause major changes to the forest structure in the future (@gahbauer2022projected). A project funded within the Conservation and Restoration (CoRe) program aimed to achieve measurable conservation gains towards the effective and enduring restoration of ecological integrity: *Dákeyi ukaanathį̀ jè: All of you watch over our country with your heart* is a 5-year project with objectives to increase the resilience of Kluane forests and restore fire to its ecosystems. Western and Indigenous knowledge systems will inform a long-term restoration plan, supported by the learnings from prescribed burn trials and alternate/complementary conservation activities. ARUs are compact environmental sensors that are designed to passively record the environment (@aru-overview), capturing vocalizing species like birds and amphibians, which is growing in use across the globe (@lots-of-pam). This technology enables resource managers to conduct prolonged surveys with minimal human interference. The subsequent data collected by these units contribute valuable information to ecological integrity metrics such as species richness, diversity, occupancy, and trends over time. This data aids decision-making and management within the Park. Given the rapid and ease of accumulating large amounts of data from these units, maintaining a high standard of data integrity is paramount to ensure future data interoperability and sharing. [WildTrax](https://www.wildtrax.ca) is an online platform developed by the [Alberta Biodiversity Monitoring Institute (**ABMI**)](https://abmi.ca) for users of environmental sensors to help addresses these big data challenges by providing solutions to standardize, harmonize, and share data.

The objectives of this report are to:

-   Describe the data management and processing procedures for the acoustic data collected;
-   Utilize traditional human tagging to detect and count avian species heard on recordings;
-   Utilize standardized automated processing techniques to evaluate species detected via ultrasonic recordings;
-   Define straightforward methods for evaluating species presence, species richness, species diversity and trends over time;
-   Offer recommendations for ongoing monitoring approaches to contribute to the assessment of ecological integrity in forest ecosystems and prescribed burn management in the park;
-   Facilitate data publication to the public, resource managers, academic institutions, and any other relevant agencies

# Methods

## Ecological Integrity Monitoring

Acoustic monitoring surveys were conducted at Auriol Trail and Quill Creek to assess avian activity during the core breeding season in May and June. Acoustic monitoring at Auriol Trail was carried out annually from 2015 to 2024, while Quill Creek was surveyed in 2022 only. These surveys involved a standardized 10-minute recording at each site, enabling consistent data collection for comparisons across years and locations. The recordings were analyzed to capture the presence and abundance of breeding bird species.

```{r, echo=F}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| include: true
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Locations from Kluane National Park Reserve ARU Monitoring Program
#| label: fig-aru-monitoring-locations

knpr_locs <- knpr_main |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, latitude, longitude, year) |>
  distinct() |>
  mutate(type = case_when(grepl('BAT',location) ~ "Bat", TRUE ~ "Bird")) |>
  sf::st_as_sf(coords = c("longitude","latitude"), crs = 4326)

locs_summary <- knpr_locs |>
  st_drop_geometry() |>
  group_by(location, year) |>
  mutate(value = row_number()) |>
  ungroup() |>
  arrange(year) |>
  pivot_wider(names_from = year, values_from = value, values_fill = 0) |>
  mutate(Site = case_when(grepl('AC-*',location) ~ "Alder Creek",
                          grepl('JR-*',location) ~ "Jarvis River",
                          grepl('BAT',location) ~ "Bat Monitoring",
                          grepl('^Q',location) ~ "Quill Creek",
                          grepl('^A[0-9]+',location) ~ "Auriol Trail",
                          TRUE ~ NA_character_),
         Treatment = case_when(str_detect(location, '-T') ~ "Prescribed Burn - Treatment",
                               str_detect(location, '-C') ~ "Prescribed Burn - Control",
                               grepl('BAT',location) ~ "Bat Monitoring",
                               TRUE ~ "Ecological Integrity")) |>
  rename('Location' = location) |>
  rename('Target' = type)

kluane_shp <- read_sf('assets/National_Parks_and_National_Park_Reserves_of_Canada_Legislative_Boundaries.shp') |>
  filter(grepl('KLUANE',adminAreaN))
kluane_shp <- st_transform(kluane_shp, st_crs(knpr_locs)) |> st_make_valid()

palette <- colorFactor(palette = "viridis", domain = knpr_locs$type)

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addPolygons(
    data = kluane_shp,
    fillColor = "#29ABE2",
    color = "black",
    weight = 1,
    fillOpacity = 0.4,
    popup = ~paste("Park:", adminAreaN)
  ) %>%
  addCircleMarkers(
    data = knpr_locs,
    color = ~palette(type),  # Color based on "type"
    popup = ~paste("Location:", knpr_locs$location, "<br>", knpr_locs$Target),
    radius = 5  # Adjust marker size
  ) %>%
  addMeasure(primaryLengthUnit = "meters", primaryAreaUnit = "sqmeters") %>%
  addMiniMap(position = "bottomleft") %>%
  addLegend(
    "bottomright",
    pal = palette,
    values = knpr_locs$Target,  # Use the same domain as the palette
    title = "Kluane Sites and Projects",
    opacity = 1
  )
  
```

## Prescribed burns

In 2023, Kluane initiated a program incorporating autonomous recording units (ARUs) for passive acoustic monitoring of bird populations in forested habitats, as an integral component of the forest health measures. Data were collected during spring and summer of `r min(knpr_locs$year)`. A total of `r knpr_locs |> st_drop_geometry() |> select(location) |> distinct() |> tally() + 2` locations were surveyed, encompassing sites at Alder Creek (`AC-`) and Jarvis River (`JR-`), each with five locations. In each site, 3 locations were designated for a prescribed burn in 2025 ("Treatment", e.g. `AC-T1`), with 2 locations serving as unburned controls (e.g. `JR-C1`). ARUs were deployed at locations throughout the season, as outlined in Table 1 (@tbl-loc-summary) and depicted in @fig-aru-monitoring-locations. ARUs were deployed at the onset of the breeding bird season (May-June) and rotated among locations until retrieval in July-August. Each ARU recorded for an average of `r average_deployment$mean` +/- `r average_deployment$sd` days. Recording schedules were standardized, comprising morning sessions at 05:30, 06:30, and 07:30, and evening sessions at 22:45 and 23:45.

A total of `r count_recs` recordings were collected. Data were transferred via SD cards to the University of Alberta Data Centre in Edmonton for redundant data storage. The recordings were standardized to ensure adherence to the naming convention of `LOCATION_DATETIME`, such as `AC-T1_20230625_053500.wav`. All recordings designated for processing were directly uploaded to WildTrax and can be downloaded from the platform's Recording tab, accessible under Manage \> Download list of recordings (see @fig-download-recs).

```{r Location summary table}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-loc-summary
#| collapse: true
#| tbl-cap: Locations surveyed across years. Ones indicated a deployment in that year for that location. Note the absence of AC-C1, AC-T3, JR-BAT in 2023 which failed to collect data.

kable(locs_summary, caption = "Location summary for ARUs deployed in Kluane National Park")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide

#cirrus_knpr_recs <- wt_audio_scanner("/Volumes/BUpublic/KNPR/2023/V1/NOTBATS", file_type = "all", extra_cols = F)

all_recs <- cirrus_knpr_recs %>%
  select(location, recording_date_time) %>%
  distinct() %>%
  drop_na() %>%
  mutate(julian = yday(recording_date_time),
         hour = hour(recording_date_time),
         year = year(recording_date_time),
         month= month(recording_date_time, label = T)) |>
  filter(!grepl('BAT', location))

count_recs <- nrow(all_recs)

average_deployment <- all_recs |>
  group_by(location, year) |>
  summarise(count = n_distinct(julian)) |>
  ungroup() |>
  summarise(mean = round(mean(count), 2),
            sd = round(sd(count), 2))

recs_plot <- all_recs |>
  filter(!location %in% c("AC-BAT","JR-BAT","AC-T3","AC-C1")) |>
  rename("Location" = location) |>
  rename("Day of Year" = julian) |>
  group_by(Location, `Day of Year`) |>
  add_tally() |>
  ungroup()
  # filter(!`Day of Year` < 150) |>
  # ggplot(aes(x = recording_date_time, y = n, colour = Location)) +
  # geom_point(size = 2) +
  # theme_bw() +
  # scale_colour_viridis_d() +
  # ylab('Count of recordings per day of year') +
  # xlab('Date')
  #scale_x_discrete(guide = guide_axis(check.overlap = TRUE))
  
```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| label: recs-plot
#| tbl-cap: Recordings collected

kable(recs_plot)

```

## Data processing

Data processing took place in [WildTrax](https://wildtrax.ca) with the goal to describe the acoustic community of species heard. The full acoustic community was analyzed including birds, mammals, amphibians, including a relative environment noise assessment (i.e. wind, rain and anthropogenic noise) To ensure balanced replication at prescribed burn locations, four randomly selected recordings were processed for 3-minutes during the morning hours of 5:00 AM - 7:59 AM ideally on four separate dates.

![Downloading a list of recordings from WildTrax](download-recs.png){#fig-download-recs}

Tags were made using count-removal (see @farnsworth2002removal, @time-removal) where tags are only made at the time of first detection of each individual heard on the recordings. In case a species was overly abundant a TMTT ('too many to tag') flag was used (see @tbl-tmtt). `r round((nrow(tmtt_tags)/nrow(knpr_main))*100,4)`% of the total tags were TMTT but were subsequently converted to numeric using `wildrtrax::wt_replace_tmtt`. We also verified that all tags that were created were checked by a second observer (n = `r verified_tags |> select(Proportion) |> slice(2) |> pull()`%) to ensure accuracy of detections (see @tbl-verified). Amphibian abundance was estimated at the time of first detection using the [North American Amphibian Monitoring Program](https://www.usgs.gov/centers/eesc/science/north-american-amphibian-monitoring-program) with abundance of species being estimated on the scale of "calling intensity index" (CI) of 1 - 3. Vocalizing mammals such as Red Squirrel, were also noted if heard on the recordings. After the data are processed in WildTrax, the [wildrtrax](https://abbiodiversity.github.io/wildrtrax/) package is use to download the data into a standard format prepared for analysis. The `wt_download_report` function downloads the data directly to a R framework for easy manipulation (see [wildrtrax APIs](https://abbiodiversity.github.io/wildrtrax/articles/apis.html)).

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-verified
#| tbl-cap: Proportion of tags verified

all_tags <- knpr_main |>
  filter(project_id %in% c(3163,3178,2317)) |>
  tally() |>
  pull()

verified_tags <- knpr_main |>
  filter(project_id %in% c(3163,3178,2317)) |>
  group_by(tag_is_verified) |>
  tally() |>
  ungroup() |>
  mutate(Proportion = round(n / all_tags,4)*100) |>
  rename("Count" = n) |>
  rename("Tag is verified" = tag_is_verified)

kable(verified_tags)
```

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-tmtt
#| tbl-cap: TMTT tags

tmtt_tags <- knpr_main |>
  select(location, recording_date_time, species_code, individual_count) |>
  distinct() |>
  filter(individual_count == "TMTT")

kable(tmtt_tags)

```

## Bat Methods

Full-spectrum recordings were collected at the two locations at Alder Creek and Jarvis River and processed using two automatic classifiers: [Kaleidoscope](https://www.wildlifeacoustics.com/products/kaleidoscope-pro)'s Bats of North America (version 5.4.0) classifier and [Sonobat](https://sonobat.com/)'s (version 3.0) Northwestern British Columbia classifier. The classifier settings are detailed in (@sec-appendix). Based on species ranges and prior detections (@slough2023little), manual identification using Kaleidoscope results was limited to Big brown bat (*Eptesicus fuscus*), Eastern red bat (*Lasiurus borealis*), silver-haired bat (*Lasionycteris noctivagans*), and Little brown bat (*Myotis lucifugus*).

All recordings assigned a species by Kaleidoscope or Sonobat were further reviewed and manually vetted. Species identifications were compared against call parameters described by @slough2023little, @solick2022coat, and @Szewczak2024western_na_bat_acoustic_table and adhered to NABat vetting standards from @reichert2018guide.

# Results

## Mean abundance (all forest species)

```{r}

tot_all <- knpr_main |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |> 
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T)

plot_all <- 
  tot_all |>
  mutate(year = year(recording_date_time)) |>
  wt_replace_tmtt(calc = "round") |>
  select(location, year, species_code, individual_order, individual_count) |>
  group_by(location, year, species_code) |>
  summarise(individual_order = mean(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0))

plot_all |>
  ggplot(aes(x = year, y = individual_order)) +
  geom_point() +
  geom_smooth(aes(x = as.numeric(as.character(year))), method = "lm") +  # Use numeric conversion for geom_smooth
  scale_colour_viridis_d() +
  scale_x_discrete(labels = scales::label_number(accuracy = 0)) +  # Keep years as factors and format without spaces
  theme_bw() +
  labs(x = "Year", y = "Mean number of individuals")

```

## Trends along Auriol Trail

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: true
#| include: true
#| fig-align: center
#| fig-cap: Species richness at forest monitoring locations across years
#| label: fig-spp-rich-locs
#| cap-location: margin

spp_rich_location <- knpr_main |>
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, year, species_code) |>
  distinct() |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |>
  filter(Site == "Auriol Trail") |>
  group_by(Site, year) |>
  summarise(species_count = n_distinct(species_code)) |>
  ungroup()

spp_rich_location |>
  ggplot(aes(x=as.factor(year), y=species_count, fill=year)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_viridis_c() +
  xlab('Location') + ylab('Species richness') +
  ggtitle('Species richness along Auriol Trail by year')

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-bird-guilds
#| tbl-cap: Common forest bird species detected

guilds <- read_csv("bird_guilds.csv") |>
  select(species_common_name, habitat_nesting) |>
  filter(habitat_nesting %in% c("CW","MW","OW","TSS"))

kable(knpr_main |> 
        group_by(species_code) |>
        add_tally() |>
        ungroup() |>
        filter(n >= 10) |>
        select(species_code, species_common_name) |> 
        distinct() |> 
        filter(!grepl('^UN', species_code), !species_code == "NONE", !species_code == "NOISE", !species_code == "40KMYO") |>
        arrange(species_code))

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Seasonal detection activity of most commonly detected forest species
#| label: fig-spp-activity
#| cap-location: margin

knpr_main |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  select(location, recording_date_time, species_common_name, species_code, individual_count) |>
  mutate(julian = lubridate::yday(recording_date_time),
         month= month(recording_date_time),
         year = factor(year(recording_date_time))) |>
  inner_join(guilds |> select(species_common_name, habitat_nesting)) |>
  arrange(species_code) |>
  filter(habitat_nesting %in% c("CW","MW","OW","TSS")) |>
  group_by(species_code) |>
  add_tally() |>
  ungroup() |>
  mutate(habitat_nesting = case_when(
    habitat_nesting == "CW" ~ "Coniferous Woodland",
    habitat_nesting == "MW" ~ "Mixedwood",
    habitat_nesting == "OW" ~ "Open Woodland",
    habitat_nesting == "TSS" ~ "Tree Shrub / Swamp",
    TRUE ~ as.character(habitat_nesting)
  )) |>
  rename("Nesting habitat" = habitat_nesting) |>
  group_by(julian, species_common_name) |>
  add_tally() |>
  ungroup() |>
  filter(!n < 3) |>
  arrange(species_code) |>
  mutate(recording_date_time = as.POSIXct(recording_date_time)) |>
  mutate(species_code = factor(species_code, levels = sort(unique(species_code)))) |>
  ggplot(aes(x = julian, y = species_code, fill = `Nesting habitat`)) + 
  geom_density_ridges(alpha = 0.2) +
  scale_fill_viridis_d() +
  theme_bw() +
  xlab("Day of Year") + 
  ylab("Species")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 8
#| fig-height: 8
#| fig-cap: Count abundance of medium-distance migrants by year
#| label: relative-abundance-auriol
#| cap-location: margin

# Medium-distance migrants
mdm <- c("SWTH","DEJU","VATH", "YRWA")

tot_auriol <- knpr_main |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |> 
  filter(Site == "Auriol Trail") |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T)

tot_auriol_mdm <- tot_auriol |>
  filter(species_code %in% mdm)

prop_auriol <- nrow(tot_auriol_mdm) / nrow(tot_auriol)

plot_mdm <- 
  tot_auriol_mdm |>
  mutate(year = year(recording_date_time)) |>
  wt_replace_tmtt(calc = "round") |>
  select(location, year, species_code, individual_order, individual_count) |>
  group_by(location, year, species_code) |>
  summarise(individual_order = mean(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0))

plot_mdm |>
  ggplot(aes(x = year, y = individual_order, colour = species_code)) +
  geom_point() +
  geom_smooth(aes(x = as.numeric(as.character(year))), method = "lm") +  # Use numeric conversion for geom_smooth
  scale_colour_viridis_d() +
  scale_x_discrete(labels = scales::label_number(accuracy = 0)) +  # Keep years as factors and format without spaces
  theme_bw() +
  facet_wrap(~species_code) +
  labs(x = "Year", y = "Mean number of individuals")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Annual count on Auriol Trail
#| label: annual-auriol-count
#| cap-location: margin

count_annual_mdm <- plot_mdm |>
  group_by(year) |>
  summarise(sum_year = sum(individual_order)) |>
  ungroup()

ggplot(count_annual_mdm, aes(x = as.factor(year), y = sum_year, fill = factor(year))) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_viridis_d() +
  labs(
    title = "Annual count of 4 common species on Auriol Trail",
    x = "Location",
    y = "Sum of Individuals",
    fill = "Year"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Mean abundance per location per year
#| label: mean-auriol-abundance
#| cap-location: margin

mean_abundance <- plot_mdm |>
  group_by(location, year) |>
  summarise(mean_abundance = mean(individual_order, na.rm = TRUE), .groups = "drop")

mean_abundance_year <- mean_abundance |>
  group_by(year) |>
  summarise(mean_abundance_year = mean(mean_abundance, na.rm = TRUE), .groups = "drop")

ggplot(mean_abundance_year, aes(x = year, y = mean_abundance_year)) +
  geom_smooth(method = "lm") +
  geom_point(size = 3, color = "darkblue") +
  labs(
    title = "Trend in Mean Abundance of 4 common species on Auriol Trail",
    x = "Year",
    y = "Mean Abundance per Station"
  ) +
  theme_minimal() +
  ylim(0, 4) +
  scale_x_continuous(breaks = seq(min(mean_abundance_year$year), max(mean_abundance_year$year), 1))

```

### Diversity

```{r}

raw_dog <- knpr_main |> 
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |> 
  filter(Site == "Auriol Trail") |>
  wt_replace_tmtt() |>
  select(location, recording_date_time, species_code, species_common_name, individual_order, individual_count) |>
  distinct() |>
  group_by(location, recording_date_time, species_code, species_common_name) |>
  summarise(count = max(individual_order)) |>
  ungroup() |>
  pivot_wider(names_from = species_code, values_from = count, values_fill = 0) |>
  as.data.frame()

shannon <- raw_dog |>
  pivot_longer(cols = -(location:species_common_name), names_to = "species", values_to = "count") |>
  group_by(location, year = lubridate::year(recording_date_time), species) |>
  summarise(total_count = sum(count)) |>
  ungroup() |>
  filter(!total_count == 0) |>
  group_by(year) |>
  summarise(shannon_index = diversity(total_count, index = "shannon")) |>
  ungroup() |>
  ggplot(aes(x = year, y = shannon_index, color = year)) +
  geom_line() +
  geom_point() +
  labs(title = "Shannon Diversity Index Over Years",
       x = "Year",
       y = "Shannon Diversity Index") +
  theme_minimal() +
  scale_colour_viridis_c() +
  ylim(3,4.5)

shannon
```


## Prescribed burns

In 2023, two locations (`AC-C1, AC-T3`) failed to complete their intended recording schedules. These failures were likely caused by low batteries, SD card formatting issues, or outdated firmware (see @sec-discussion). In 2024, all locations successfully recorded their intended schedules. A total of `r nrow(distinct_spp)` species were identified. @fig-prescribed-burns illustrates the relationship between species richness grouped by controls and treatments at each location, showing that species richness was equal across sites (Alder Creek, Jarvis River) and treatments combined across sites (control, treatments).

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Prescribed burns
#| label: fig-prescribed-burns

burn_data <- knpr_main |>
  filter(project_id %in% c(2317,3178)) |>
  wt_tidy_species(remove = c("amphibian","mammal","unknown","abiotic")) |>
  wt_replace_tmtt(calc = "round") |>
  mutate(year = year(recording_date_time)) |>
  select(location, year, recording_date_time, species_code, individual_order, individual_count) |>
  mutate(Site = case_when(grepl('AC-*',location) ~ "Alder Creek",
                          grepl('JR-*',location) ~ "Jarvis River",
                          grepl('BAT',location) ~ "Bat Monitoring",
                          grepl('^Q',location) ~ "Quill Creek",
                          grepl('^A[0-9]+',location) ~ "Auriol Trail",
                          TRUE ~ NA_character_),
         Treatment = case_when(str_detect(location, '-T') ~ "Prescribed Burn",
                               str_detect(location, '-C') ~ "Control",
                               grepl('BAT',location) ~ "Bat Monitoring",
                               TRUE ~ "Ecological Integrity"))

richness_data <- burn_data %>%
  group_by(year, Site, Treatment) %>%
  summarize(species_richness = n_distinct(species_code), .groups = "drop")

# Perform t-test for species richness between treatments
t_test_result <- t.test(
  species_richness ~ Treatment,
  data = richness_data
)

# Print t-test results
print(t_test_result)

# Boxplot for species richness by treatment
ggplot(richness_data, aes(x = Treatment, y = species_richness, fill = Treatment)) +
  geom_boxplot() +
  labs(title = "Species Richness by Treatment",
       x = "Treatment", y = "Species Richness") +
  theme_bw()+
  annotate("text", x = 1.5, y = max(richness_data$species_richness),
           label = paste0("p = ", signif(t_test_result$p.value, 3)),
           size = 5, color = "black") +
  scale_fill_viridis_d()

```

## Bat data

The detectors ran for a total of 35 recorder nights and in total collected 8794 files, of these 8776 were classified as noise files (`r round((8776/8794)*100,2)`%), with no distinguishable bat present. Of the remaining recordings the only species identified was Little brown bat (@tbl-bat-results). Recordings that had no diagnostic criteria for any species were classified as either 40kHz Myotis (calls with consistent minimum frequency with an Fc=35-45kHz) or high frequency group (bat calls with Fc\>35kHz). No low frequency calls were recorded at either site. Due to the absence of any diagnostic calls for species other than the Little brown bat the 40kHz Myotis (40KMyo) and High Frequency (HighF) recordings were likely produced by Little brown bats.

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| tbl-cap: Results of manually classified recordings collected at two stations in Kluane National Park Reserve in 2024.
#| label: tbl-bat-results
#| cap-location: margin

bat_data <- data.frame(
  `Species Group/Species` = c("Little Brown Bat", "40kHz Myotis", "High Frequency Bats", "Noise", "Total Bats"),
  Code = c("MYLU", "40KMyo", "HighF", "NOISE", ""),
  `AC Bats` = c(6, 9, 2, 1623, "17"),
  `JR Bats` = c(0, 1, 0, 7153, "1"),
  Total = c("6", "10", "2", "8776", "")
)

# Generate the kable table
kable(bat_data, align = "lcccc", escape = FALSE) %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover", "condensed"))

```

# Discussion {#sec-discussion}

## Improvements to EI monitoring for birds

Given the declining health of the forests in the Park, the observed low levels of species richness and diversity are unsurprising. Following prescribed burns, it is expected that the habitat will gradually support the emergence of new guilds and species as part of its natural regeneration process. Monitoring these locations will allow for the tracking of these changes over time. While this project has yielded promising results, there are several operational improvements necessary to fully realize its potential moving into next season. Some key recommendations include:

-   **Extending survey window and recording schedule**: Initiating the survey window to encompass resident and early-migrant species (early May) and extending it into the post-breeding season (mid-July) will capture a comprehensive range of species. Given the diverse migration timing and breeding patterns among species, extending the window can help to add additional species whose detectability is lower. Recording bird vocalizations throughout the deployment period at various times of the day--pre-dawn, dawn, post-dawn, pre-dusk, dusk, post-dusk, and night--enables a comprehensive assessment of bird diversity and activity patterns. Birds exhibit diverse diurnal and nocturnal behaviors, with some species being more vocal during specific times of the day or night. Continuous recording across different times allows ARUs to capture a broad spectrum of species, including those that are crepuscular or nocturnal, providing valuable insights into their behaviors and habitat preferences. This approach enhances the accuracy and completeness of bird surveys, offering valuable data for planning and management efforts.

-   **Equipment maintenance and management**: Given that 3 locations failed during their deployment, ensuring that equipment is properly functioning, tested and maintained prior to deployment is crucial for ensuring the success of a long-term monitoring program. The ABMI provides [Equipment Protocols](https://ftp-public.abmi.ca/home/publications/documents/599_ABMI_2021_TerrestrialARUandRemoteCameraTrapProtocols_ABMI.pdf) to help assist in the maintenance and deployment of most [Wildlife Acoustics](https://www.wildlifeacoustics.com/) makes and models. Most importantly, ensure the units are cleaned and inspected for physical or mechanical damage, update the firmware and conduct tests to ensure functionality in a controlled environment.

-   **Localized monitoring**: Consistently deploying ARUs in the same locations on the landscape year after year will help to establish robust monitoring sites. By continuously surveying specific areas, changes in bird distribution and abundance can be monitored. This approach facilitates the identification of long-term trends and enables the understanding of changes in bird populations and guilds over time, especially with planned changes with the prescribed burns. Forest structure may be lost after a burn, however ARUs can be established in the same locations using different deployment methods (again see [Equipment Protocols](https://ftp-public.abmi.ca/home/publications/documents/599_ABMI_2021_TerrestrialARUandRemoteCameraTrapProtocols_ABMI.pdf)).

-   **ARU deployment in prescribed burns**: Deploying at least one ARU per 0.5 hectares burned ensures thorough monitoring of post-burn effects on bird populations. This density of ARU deployment generates detailed data on how bird populations respond to habitat changes following prescribed burns, facilitating the understanding of ecosystem resilience and recovery processes. By monitoring post-burn effects on bird populations, researchers can inform conservation strategies aimed at mitigating the impact of habitat disturbance. Given the guild changes seen in species communities post-burn it may be necessary to survey burned areas only every 1, 3 and 5-years post-burn along the length of the program.

-   **Extending analyses**: With the accumulation of additional data, it is recommended to conduct more sophisticated analyses, including utilizing dynamic occupancy models to effectively capture the fluctuations in species occupancy across sites over time. Exploring models aimed at examining the resilience of both individual species and community structure is suggested.

## Recommendations for bat deployments

For future deployments, it is recommended to ensure recorder settings align with the NABat protocol (@Loeb_2015). Some recordings were collected during daytime hours, suggesting the recording schedule included non-target hours. NABat standards advise recording only from 30 minutes before sunset to 30 minutes after sunrise.

Both deployment locations were positioned near sources of ultrasonic noise (@fig-bat-noise), likely contributing to the large number of noise files in the analysis. Additionally, some noise files contained potential rodent vocalizations, which may be worth noting for future analyses. If feasible, relocating the sites away from ultrasonic noise sources is recommended. Alternatively, adjusting the recorder gain settings could help reduce noise file occurrences. In 2024, the gain was set to 12; reducing it to 0 could significantly decrease noise files and extend recorder battery life. While lower gain settings may reduce the detection of quieter species, the lack of evidence for these species this year suggests the benefits would outweigh this limitation.

![Examples of environmental ultrasonic noise in AC-Bats and JR-Bats sites in 2024 deployments](bat-noise.png){#fig-bat-noise}

-   **Bat monitoring enhancements**: Continuing to use a sample rate to 256 kHz is advisable, given that bat species in western Canada typically do not vocalize beyond this frequency range. The sampling rate will also optimize the total amount of data volume collected and battery usage. It is also recommended to programming the Max Time Between Calls (TBC) by adjusting the trigger window from 3 to 2 seconds. The [North American Bat Monitoring Program](https://www.nabatmonitoring.org/) offers many additional recommendations for deployment, processing and interpretation of ultrasonic data.

# Appendix A: Settings used for classifiers {#sec-appendix}

**Kaleidoscope Settings** (**Version:** 5.6.8):

-   **Mode:** 0\
-   **Threads:** 24\
-   **Classifier Settings:**
    -   **Classifier Version**: classifiers-Bats_of_North_America_5.4.0\
    -   **ROC:** 2\
-   **Enabled Species:**
    -   EPTFUS: 1\
    -   LASBOR: 1\
    -   LASNOC: 1\
    -   MYOLUC: 1\
-   **Analysis Settings**
    -   **Frequency Minimum:** 8\
    -   **Frequency Maximum:** 120\
    -   **Duration Minimum:** 2\
    -   **Duration Maximum:** 40\
    -   **Maximum Gap:** 500\
    -   **Minimum Calls:** 1\
    -   **Filter ZC:** 1\
    -   **Remove DC:** 0\
    -   **CF Minimum Frequency:** 0\
    -   **CF Maximum Frequency:** 0\
    -   **CF Maximum Bandwidth:** 0

---
title: "Report on the use of passive acoustic monitoring in Kluane National Park Reserve"
format:
  html:
    grid:
      margin-width: 300px
navbar: right
theme: cosmo
date: "`r format(Sys.time(), '%d %B, %Y')`"
author: 
  - "Alex MacPhail"
  - "Camila Hurtado"
  - "Jeni Rudisill"
editor: visual
bibliography: references.bib
nocite: '@*'
toc: true
toc-depth: 3
toc-expand: true
toc-location: left
styles: styles.css
github: https://github.com/ABbiodiversity/knpr-pam
---

![](kluane-banner.jpg){style="float:left`;" fig-alt="Photo of a glacier" fig-align="center"}

```{r}
#| label: load-packages and authenticate
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(tidyverse)
library(leaflet)
library(wildrtrax)
library(unmarked)
library(sf)
library(terra)
library(vctrs)
library(ggridges)
library(scales)
library(kableExtra)
library(plotly)
library(DT)
library(lme4)
library(ggpubr)
library(vegan)
library(MuMIn)
library(ggmagnify)
library(AICcmodavg)

wt_auth()

load('knpr.RData')
#save.image('knpr.RData')
#cirrus_knpr_recs  <- readRDS('knprcirrus.RDS')
```

```{r Data download}
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| include: true

knpr_projects <- wildrtrax::wt_get_download_summary(sensor = 'ARU') |>
  filter(grepl('Kluane', project)) |>
  select(project_id) |>
  pull()

knpr_main <-
  map_dfr(
    .x = knpr_projects,
    .f = ~ wildrtrax::wt_download_report(
      project_id = .x,
      sensor_id = "ARU",
      weather_cols = T,
      reports = "main"
    )
  )
```

# Abstract

Passive acoustic monitoring has proven to be a valuable tool for studying vocalizing species. Environmental sensors are becoming increasingly easy to program and can autonomously generate extensive data sets of the soundscape, becoming an invaluable resource for ecological integrity monitoring. Kluane National Park Reserve deployed autonomous recording units (ARUs) across `r knpr_locs |> st_drop_geometry() |> select(location) |> distinct() |> tally() + 2` locations in 2023, participating in the national prescribed Burn protocol. ARUs detected a total of `r nrow(distinct_spp)` species including birds and mammals. Sustained monitoring of these areas following prescribed burns, incorporating enhanced protocols for equipment functionality, as well as broader scope in recording and data collection, will optimize the effectiveness of the ongoing monitoring program. Future data collection can be facilitated by more advanced models and analyses.

::: {style="background-color: #f4f4f4; padding: 20px;"}
This report is dynamically generated, meaning its results may evolve with the addition of new data or further analyses. For the most recent updates, feel free to reach out to the authors or refer to the publication date.
:::

# Land Acknowledgement

In the spirit of Reconciliation, we respectfully acknowledge that the lands of Kluane National Park Reserve where this study took place are the traditional territories of the Southern Tutchone people represented in the Kluane region by the Champagne and Aishihik First Nations and the Kluane First Nation. Champagne and Aishihik First Nations, Kluane First Nation and Parks Canada are jointly responsible for the management of Kluane's natural and cultural resources.

# Introduction

Human activities have been identified as key pressures and contributors to the global decline in forest wildlife (@allan2017recent). The repercussions of habitat fragmentation (@fahrig2003effects) and loss (@hanski2011habitat), climate change (@mantyka2012interactions, @sattar2021review, @abrahms2023climate), and increased access to sensitive areas exert direct and indirect pressures on forest biodiversity, particularly in managed regions in Canada (@lemieux2011state).

Forests of the Kluane National Park and Reserve are currently experiencing a severe fire deficit, with a 71% departure in the estimated area burned from the historic area burned (see [2017 Kluane National Park and Reserve State of the Park Technical Compendium](https://parks.canada.ca/agence-agency/bib-lib/rapports-reports/~/media/4334d912b761468398c45fa006552cd1.ashx)). The area also saw a significant spruce bark beetle infestation over the 1990s to 2000s. It is estimated that over 49,000 ha were affected and, on average, almost half of the mature spruce trees were killed in affected forests. Given that climate change scenarios consistently indicate hotter temperatures and a longer growing season for Kluane forests, disturbance from wildfires, insect outbreaks, and other direct and indirect effects, are likely to cause major changes to the forest structure in the future. A project funded within the Conservation and Restoration (CoRe) program aimed to achieve measurable conservation gains towards the effective and enduring restoration of ecological integrity: *Dákeyi ukaanathį̀ jè: All of you watch over our country with your heart* is a 5-year project with objectives to increase the resilience of Kluane forests and restore fire to its ecosystems. Western and Indigenous knowledge systems will inform a long-term restoration plan, supported by the learnings from prescribed burn trials and alternate/complementary conservation activities. In 2023, Kluane National Park Reserve initiated a program incorporating autonomous recording units (ARUs) for passive acoustic monitoring (PAM) of bird populations in forest habitat, being an integral component of the forest health measures. ARUs are compact environmental sensors that are designed to passively record the environment (@aru-overview), capturing vocalizing species like birds and amphibians, which is growing in use across the globe (@lots-of-pam). This technology enables resource managers to conduct prolonged surveys with minimal human interference. The subsequent data collected by these units contribute valuable information to ecological integrity metrics such as species richness, diversity, occupancy, and trends over time. This data aids decision-making and management within the Park. Given the rapid and ease of accumulating large amounts of data from these units, maintaining a high standard of data integrity is paramount to ensure future data interoperability and sharing. [WildTrax](https://www.wildtrax.ca) is an online platform developed by the [Alberta Biodiversity Monitoring Institute (**ABMI**)](https://abmi.ca) for users of environmental sensors to help addresses these big data challenges by providing solutions to standardize, harmonize, and share data.

The objectives of this report are to:

-   Describe the data management and processing procedures for the acoustic data collected in 2023;
-   Utilize traditional human tagging to detect and count species heard on recordings;
-   Define straightforward methods for evaluating species presence, species richness, species diversity and species occupancy;
-   Offer recommendations for ongoing monitoring approaches to contribute to the assessment of ecological integrity in forest ecosystems and prescribed burn management in the park;
-   Facilitate data publication to the public, resource managers, academic institutions, and any other relevant agencies

# Methods

## Data collection and management

```{r, echo=F}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: ARU survey locations
#| label: fig-locs

palette <- colorFactor(palette = "viridis", domain = knpr_locs$type)

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addCircleMarkers(
    data = knpr_locs,
    color = ~palette(type),  # Color based on "type"
    popup = ~paste("Location:", knpr_locs$location, "<br>"),
    radius = 5  # Adjust marker size
  ) %>%
  addMeasure() %>%
  addMiniMap(position = "bottomleft")
  
```

Data were collected during spring and summer of `r min(knpr_locs$year)`. A total of `r knpr_locs |> st_drop_geometry() |> select(location) |> distinct() |> tally() + 2` locations were surveyed, encompassing sites at Alder Creek (`AC-`) and Jarvis River (`JR-`), each with five locations. In each site, 3 locations were designated for a prescribed burn in 2024 (treatment, e.g. `AC-T1`), with 2 locations serving as unburned controls (e.g. `JR-C1`). 3 locations were within the area also being considered for a prescribed fire in future seasons (2025 - ). ARU were deployed across locations throughout the season, as outlined in Table 1 (@tbl-loc-summary) and depicted in Figure 1 (@fig-locs). ARUs were deployed at the onset of the breeding bird season (May-June) and rotated among locations until retrieval in July-August. Each ARU recorded for an average of `r average_deployment$mean` +/- `r average_deployment$sd` days. Recording schedules were standardized, comprising morning sessions at 05:30, 06:30, and 07:30, and evening sessions at 22:45 and 23:45. Evening recordings targeted species such as Varied Thrush, Common Nighthawk, and owls. Station installations remained constant throughout the monitoring period, with Alder Creek stations established in late May and Jarvis River in June.

![Downloading a list of recordings from WildTrax](download-recs.png){#fig-download-recs}

A total of `r count_recs` recordings were collected. Data were transferred via SD cards to the University of Alberta in Edmonton, where they are redundantly stored on a server known as Cirrus. The recordings were standardized to ensure adherence to the naming convention of `LOCATION_DATETIME`, such as `AC-T1_20230625_053500.wav`. All recordings designated for processing were directly uploaded to WildTrax and can be downloaded from the platform's Recording tab, accessible under Manage \> Download list of recordings (see @fig-download-recs).

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide

knpr_locs <- knpr_main |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, latitude, longitude, year) |>
  distinct() |>
  mutate(type = case_when(grepl('BAT',location) ~ "Bat", TRUE ~ "Bird")) |>
  sf::st_as_sf(coords = c("longitude","latitude"), crs = 4326)

repeats <- knpr_locs |>
  st_drop_geometry() |>
  group_by(location) |>
  summarise(count = n_distinct(year)) |>
  ungroup() |>
  select(location) |>
  distinct() |>
  pull()

######## Define geospatial assets

kluane_shp <- read_sf('assets/National_Parks_and_National_Park_Reserves_of_Canada_Legislative_Boundaries.shp') |>
  filter(adminAreaN == 'KLUANE NATIONAL PARK OF CANADA')
kluane_shp <- st_transform(kluane_shp, st_crs(knpr_locs)) |> st_make_valid()

locs_summary <- knpr_locs |>
  st_drop_geometry() |>
  group_by(location, year) |>
  mutate(value = row_number()) |>
  ungroup() |>
  arrange(year) |>
  pivot_wider(names_from = year, values_from = value, values_fill = 0) |>
  mutate(Site = case_when(grepl('AC-*',location) ~ "Alder Creek",
                          grepl('JR-*',location) ~ "Jarvis River",
                          grepl('BAT',location) ~ "Bat Monitoring",
                          grepl('^Q',location) ~ "Quill Creek",
                          grepl('^A[0-9]+',location) ~ "Auriol Trail",
                          TRUE ~ NA_character_),
         Treatment = case_when(str_detect(location, '-T') ~ "Prescribed Burn",
                               str_detect(location, '-C') ~ "Control",
                               grepl('BAT',location) ~ "Bat Monitoring",
                               TRUE ~ "Ecological Integrity")) |>
  rename('Location' = location)

```

```{r Location summary table}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-loc-summary
#| tbl-cap: Locations surveyed across years. Ones indicated a deployment in that year for that location. Note the absence of AC-C1, AC-T3, JR-BAT which failed to collect data.

kable(locs_summary, caption = "Location summary for ARUs deployed")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide

#cirrus_knpr_recs <- wt_audio_scanner("/Volumes/BUpublic/KNPR/2023/V1/NOTBATS", file_type = "all", extra_cols = F)

all_recs <- cirrus_knpr_recs %>%
  select(location, recording_date_time) %>%
  distinct() %>%
  drop_na() %>%
  mutate(julian = yday(recording_date_time),
         hour = hour(recording_date_time),
         year = year(recording_date_time),
         month= month(recording_date_time, label = T)) |>
  filter(!grepl('BAT', location))

count_recs <- nrow(all_recs)

average_deployment <- all_recs |>
  group_by(location, year) |>
  summarise(count = n_distinct(julian)) |>
  ungroup() |>
  summarise(mean = round(mean(count),2),
            sd = round(sd(count),2))

recs_plot <- all_recs |>
  filter(!location %in% c("AC-BAT","JR-BAT","AC-T3","AC-C1")) |>
  rename("Location" = location) |>
  rename("Day of Year" = julian) |>
  group_by(Location, `Day of Year`) |>
  add_tally() |>
  ungroup()
  # filter(!`Day of Year` < 150) |>
  # ggplot(aes(x = recording_date_time, y = n, colour = Location)) +
  # geom_point(size = 2) +
  # theme_bw() +
  # scale_colour_viridis_d() +
  # ylab('Count of recordings per day of year') +
  # xlab('Date')
  #scale_x_discrete(guide = guide_axis(check.overlap = TRUE))
  
```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| label: recs-plot
#| tbl-cap: Recordings collected

kable(recs_plot)

```

## Community data processing

Data processing took place in [WildTrax](https://wildtrax.ca) with the goal to describe the acoustic community of species heard at locations while choosing a large enough subset of recordings for analyses. To ensure balanced replication, for each location surveyed, four randomly selected recordings were processed for 3-minutes during the morning hours of 5:00 AM - 7:59 AM ideally on four separate dates (see @tbl-loc-repl). Four recordings will ensure that we have the minimum number of samples for a simple occupancy analysis (@mackenzie2002estimating and @imperfect-occu). Tags are made using count-removal (see @farnsworth2002removal, @time-removal) where tags are only made at the time of first detection of each individual heard on the recordings. In case a species was overly abundant a TMTT ('too many to tag') flag was used (see @tbl-tmtt). `r round(nrow(tmtt_tags)/nrow(knpr_main),2)*100`% of the total tags were TMTT but were subsequently converted to numeric using `wildRtrax::wt_replace_tmtt`. We also verified that all tags that were created were checked by a second observer (n = `r verified_tags |> select(Proportion) |> slice(2) |> pull()`%) to ensure accuracy of detections (see @tbl-verified). Amphibian abundance was estimated at the time of first detection using the [North American Amphibian Monitoring Program](https://www.usgs.gov/centers/eesc/science/north-american-amphibian-monitoring-program) with abundance of species being estimated on the scale of "calling intensity index" (CI) of 1 - 3. Vocalizing mammals such as Red Squirrel, were also noted if heard on the recordings. After the data are processed in WildTrax, the [wildRtrax](https://abbiodiversity.github.io/wildRtrax/) package is use to download the data into a standard format prepared for analysis. The `wt_download_report` function downloads the data directly to a R framework for easy manipulation (see [wildRtrax APIs](https://abbiodiversity.github.io/wildRtrax/articles/apis.html)).

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-verified
#| tbl-cap: Proportion of tags verified

all_tags <- knpr_main |>
  filter(project_id %in% c(3163,3178,2317)) |>
  tally() |>
  pull()

verified_tags <- knpr_main |>
  filter(project_id %in% c(3163,3178,2317)) |>
  group_by(tag_is_verified) |>
  tally() |>
  ungroup() |>
  mutate(Proportion = round(n / all_tags,4)*100) |>
  rename("Count" = n) |>
  rename("Tag is verified" = tag_is_verified)

kable(verified_tags)
```

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-tmtt
#| tbl-cap: TMTT tags

tmtt_tags <- knpr_main |>
  select(location, recording_date_time, species_code, individual_count) |>
  distinct() |>
  filter(individual_count == "TMTT")

kable(head(tmtt_tags))

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| include: true

knpr_tasks <- knpr_main |>
  as_tibble() |>
  filter(aru_task_status %in% c("Transcribed","New")) |>
  select(project_id, location, recording_date_time, task_duration, task_method, observer_id) |>
  distinct() |>
  mutate(hour = lubridate::hour(recording_date_time),
         year = lubridate::year(recording_date_time),
         typ = case_when(
    hour >= 4 & hour <= 7 ~ "Dawn",
    hour > 7 & hour < 20 ~ "Day",
    hour >= 19 & hour < 21 ~ "Dusk",
    TRUE ~ "Night"
  )) |>
  group_by(location, year, task_duration, typ) |>
  tally() |>
  ungroup()


task_info <- fs::dir_ls('tasks', regexp = "*.csv") |>
  map_dfr(~read_csv(., show_col_types = F)) |>
  select(internal_task_id, rain:audioQuality) |>
  distinct()

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-loc-repl
#| tbl-cap: Tasks and unit replication for listening

#kable(knpr_tasks)
```

## Ultrasonic Methods

Full-spectrum recordings were collected at each station and processed using two automatic classifiers: Kaleidoscope's Bats of North America 5.4.0 classifier and Sonobat 3.0's Northwestern British Columbia classifier. The classifier settings are detailed in Appendix A. Based on species ranges and prior detections (Slough et al., 2022), manual identification using Kaleidoscope results was limited to Big Brown Bats (*Eptesicus fuscus*), Eastern Red Bats (*Lasiurus borealis*), Silver-haired Bats (*Lasionycteris noctivagans*), and Little Brown Bats (*Myotis lucifugus*).

All recordings assigned a species by Kaleidoscope or Sonobat were further reviewed and manually vetted. Species identifications were compared against call parameters described by Slough et al. (2022), Solick (2022), and Szewczak (2018) and adhered to NABat vetting standards (Reichert et al., 2018).

# Results

### Birds

In 2023, three locations (`AC-C1`, `AC-T3`) failed and did not complete their intended recording schedule. These failures could be due to either low batteries, SD card formatting issues or outdated firmware (see #discussion). In 2024, all locations successfully recorded their intended schedules. A total of `r nrow(distinct_spp)` species were found. @fig-spp-rich-locs describes the relationship of species richness across each location. Species richness was equal between sites (Alder Creek, Jarvis River) and treatments combined across sites (control, treatments).

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: true
#| include: false

spp_rich_location <- knpr_main |>
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, year, species_code) |>
  distinct() |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |>
  group_by(Site, year) |>
  summarise(species_count = n_distinct(species_code)) |>
  ungroup()

distinct_spp <- knpr_main |>
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(species_code) |>
  distinct() |>
  arrange(species_code)
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: true
#| include: true
#| fig-align: center
#| fig-cap: Species richness at forest monitoring locations across years
#| label: fig-spp-rich-locs
#| cap-location: margin

spp_rich_location |>
  ggplot(aes(x=reorder(Site,-species_count), y=species_count, fill=Site)) +
  geom_line() +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_viridis_d() +
  scale_y_continuous(breaks = pretty_breaks()) +
  xlab('Location') + ylab('Species richness') +
  ggtitle('Species richness at each location surveyed for each year') +
  coord_flip()

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| include: true
#| results: hide

spp_rich_annual <- knpr_main |>
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, year, species_code) |>
  distinct() |>
  group_by(year) |>
  summarise(effort = n_distinct(species_code) / n_distinct(location),
            species_count = n_distinct(species_code)) |>
  ungroup()

year_effort <- knpr_main |>
  mutate(year = lubridate::year(recording_date_time)) |>
  group_by(year) |>
  summarise(count_of_locs = n_distinct(location))
```

```{r}
#| warning: false
#| echo: false
#| eval: false
#| include: false
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Species richness at forest monitoring locations across years considering sampling effort
#| label: fig-spp-rich-annual
#| cap-location: margin

#FOR NEXT YEAR

spp_rich_annual_plot <- spp_rich_annual |>
   inner_join(year_effort) |>
   ggplot(aes(x = year)) +
   geom_line(aes(y = species_count), size = 1) +
   geom_bar(aes(y = count_of_locs * 5), alpha = 0.7, stat = "identity") +  # Adjust the multiplier for better visualization
   scale_y_continuous(name = "Species Count", sec.axis = sec_axis(~./5, name = "Count of Locations")) +
   labs(x = "Year") +
   theme_bw()

spp_rich_annual_plot

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-bird-guilds
#| tbl-cap: Common forest bird species detected

guilds <- read_csv("bird_guilds.csv") |>
  select(species_common_name, habitat_nesting) |>
  filter(habitat_nesting %in% c("CW","MW","OW","TSS"))

kable(knpr_main |> 
        group_by(species_code) |>
        add_tally() |>
        ungroup() |>
        filter(n >= 10) |>
        select(species_code, species_common_name) |> 
        distinct() |> 
        filter(!grepl('^UN', species_code), !species_code == "NONE") |>
        arrange(species_code))

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Seasonal detection activity of most commonly detected forest species
#| label: fig-spp-activity
#| cap-location: margin

knpr_main |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  select(location, recording_date_time, species_common_name, species_code, individual_count) |>
  mutate(julian = lubridate::yday(recording_date_time),
         month= month(recording_date_time),
         year = factor(year(recording_date_time))) |>
  inner_join(guilds |> select(species_common_name, habitat_nesting)) |>
  arrange(species_code) |>
  filter(habitat_nesting %in% c("CW","MW","OW","TSS")) |>
  group_by(species_code) |>
  add_tally() |>
  ungroup() |>
  mutate(habitat_nesting = case_when(
    habitat_nesting == "CW" ~ "Coniferous Woodland",
    habitat_nesting == "MW" ~ "Mixedwood",
    habitat_nesting == "OW" ~ "Open Woodland",
    habitat_nesting == "TSS" ~ "Tree Shrub / Swamp",
    TRUE ~ as.character(habitat_nesting)
  )) |>
  rename("Nesting habitat" = habitat_nesting) |>
  group_by(julian, species_common_name) |>
  add_tally() |>
  ungroup() |>
  filter(!n < 3) |>
  arrange(species_code) |>
  mutate(recording_date_time = as.POSIXct(recording_date_time)) |>
  mutate(species_code = factor(species_code, levels = sort(unique(species_code)))) |>
  ggplot(aes(x = julian, y = species_code, fill = `Nesting habitat`)) + 
  geom_density_ridges(alpha = 0.2) +
  scale_fill_viridis_d() +
  theme_bw() +
  xlab("Day of Year") + 
  ylab("Species")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Relative abundance of species on Auriol Trial
#| label: relative-abundance-auriol
#| cap-location: margin

# Calculate the total count per year
total_per_year <- knpr_main |>
  group_by(species_code) |>
  add_tally() |>
  ungroup() |>
  filter(n >= 10) |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |>
  filter(Site == "Auriol Trail") |>
  mutate(Year = year(recording_date_time)) |>
  wt_replace_tmtt(calc = "round") |>
  mutate(individual_count = as.numeric(individual_count)) |>
  filter(!is.na(individual_count)) |>
  group_by(Year) |>
  summarise(Total_Individuals = sum(individual_count, na.rm = TRUE))

# Join the total counts with the long data and calculate relative abundance
relative_abundance <- knpr_main |>
  mutate(Year = year(recording_date_time)) |>
  left_join(total_per_year, by = "Year") |>
  inner_join(locs_summary |> select(Location, Site), by = c("location" = "Location")) |>
  filter(Site == "Auriol Trail") |>
  wt_replace_tmtt(calc = "round") |>
  mutate(individual_count = as.numeric(individual_count)) |>
  filter(!is.na(individual_count)) |>
  mutate(Relative_Abundance = individual_count / Total_Individuals)

# Optionally, group by location and site if needed
relative_abundance_by_site <- relative_abundance |>
  group_by(location, Site, Year) |>
  summarise(Total_Relative_Abundance = sum(Relative_Abundance)) |>
  mutate(Year = as.factor(Year))

ggplot(relative_abundance_by_site, aes(x = Year, y = Total_Relative_Abundance, colour = location, group = location)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(
    title = "Relative Abundance of Birds On Auriol Trail Across Sites and Time",
    x = "Year",
    y = "Relative Abundance",
    color = "Location"
  ) +
  scale_colour_viridis_d() +
  theme_bw()

# Optionally, group by location and site if needed
relative_abundance_by_site2 <- relative_abundance |>
  select(location, Site, Year, Relative_Abundance) |>
  distinct()
  
ggplot(relative_abundance_by_site2, aes(x = Year, y = Relative_Abundance)) +
  geom_smooth(method = "loess", se = TRUE) +  # Add a smoothed line
  labs(
    title = "Relative Abundance Over Time at Auriol Site",
    x = "Year",
    y = "Relative Abundance"
  ) +
  theme_minimal()


```

### Ultrasonic data

The detectors ran for a total of 35 recorder nights and in total collected 8794 files. Of these 8776 were classified as noise files, with no distinguishable bat present. Of the remaining recordings the only species identified was little brown bats (6, Table 2). Recordings that had no diagnostic criteria for any species were classified as either 40kHz Myotis (calls with consistent minimum frequency with an Fc=35-45kHz) or high frequency group (bat calls with Fc\>35kHz). No low frequency calls were recorded at either site. Due to the absence of any diagnostic calls for species other than the little brown bat the 40kHz Myotis and High Frequency recordings were likely produced by little brown bats.

Table 2: Results of manually classified recordings collected at two station in Kluane National Park in 2024.

| Species Group/Species | Code   | AC-Bats | JR-Bats | Total    |
|-----------------------|--------|---------|---------|----------|
| Little Brown Bat      | MYLU   | 6       | 0       | **6**    |
| 40kHz Myotis          | 40KMyo | 9       | 1       | **10**   |
| High Frequency Bats   | HighF  | 2       | 0       | **2**    |
| Noise                 | NOISE  | 1623    | 7153    | **8776** |
| **Total Bats**        |        | **17**  | **1**   |          |

# Discussion

## Improvements to EI monitoring for birds

Given the declining health of the forests in the Park, the observed low levels of species richness and diversity are unsurprising. Following prescribed burns, it is expected that the habitat will gradually support the emergence of new guilds and species as part of its natural regeneration process. Monitoring these locations will allow for the tracking of these changes over time. While this project has yielded promising results, there are several operational improvements necessary to fully realize its potential moving into next season. Some key recommendations include:

-   **Extending survey window and recording schedule**: Initiating the survey window to encompass resident and early-migrant species (early May) and extending it into the post-breeding season (mid-July) will capture a comprehensive range of species. Given the diverse migration timing and breeding patterns among species, extending the window can help to add additional species whose detectability is lower. Recording bird vocalizations throughout the deployment period at various times of the day--pre-dawn, dawn, post-dawn, pre-dusk, dusk, post-dusk, and night--enables a comprehensive assessment of bird diversity and activity patterns. Birds exhibit diverse diurnal and nocturnal behaviors, with some species being more vocal during specific times of the day or night. Continuous recording across different times allows ARUs to capture a broad spectrum of species, including those that are crepuscular or nocturnal, providing valuable insights into their behaviors and habitat preferences. This approach enhances the accuracy and completeness of bird surveys, offering valuable data for planning and management efforts.

-   **Equipment maintenance and management**: Given that 3 locations failed during their deployment, ensuring that equipment is properly functioning, tested and maintained prior to deployment is crucial for ensuring the success of a long-term monitoring program. The ABMI provides [Equipment Protocols](https://ftp-public.abmi.ca/home/publications/documents/599_ABMI_2021_TerrestrialARUandRemoteCameraTrapProtocols_ABMI.pdf) to help assist in the maintenance and deployment of most [Wildlife Acoustics](https://www.wildlifeacoustics.com/) makes and models. Most importantly, ensure the units are cleaned and inspected for physical or mechanical damage, update the firmware and conduct tests to ensure functionality in a controlled environment.

-   **Localized monitoring**: Consistently deploying ARUs in the same locations on the landscape year after year will help to establish robust monitoring sites. By continuously surveying specific areas, changes in bird distribution and abundance can be monitored. This approach facilitates the identification of long-term trends and enables the understanding of changes in bird populations and guilds over time, especially with planned changes with the prescribed burns. Forest structure may be lost after a burn, however ARUs can be established in the same locations using different deployment methods (again see [Equipment Protocols](https://ftp-public.abmi.ca/home/publications/documents/599_ABMI_2021_TerrestrialARUandRemoteCameraTrapProtocols_ABMI.pdf)).

-   **ARU deployment in prescribed burns**: Deploying at least one ARU per 0.5 hectares burned ensures thorough monitoring of post-burn effects on bird populations. This density of ARU deployment generates detailed data on how bird populations respond to habitat changes following prescribed burns, facilitating the understanding of ecosystem resilience and recovery processes. By monitoring post-burn effects on bird populations, researchers can inform conservation strategies aimed at mitigating the impact of habitat disturbance. Given the guild changes seen in species communities post-burn it may be necessary to survey burned areas only every 1, 3 and 5-years post-burn along the length of the program.

-   **Extending analyses**: With the accumulation of additional data, it is recommended to conduct more sophisticated analyses, including utilizing dynamic occupancy models to effectively capture the fluctuations in species occupancy across sites over time. Exploring models aimed at examining the resilience of both individual species and community structure is suggested.

### Recommendations for ultrasonic deployments

For future deployments, it is recommended to ensure recorder settings align with the NABat protocol (Loeb et al., 2015). Some recordings were collected during daytime hours, suggesting the recording schedule included non-target hours. NABat standards advise recording only from 30 minutes before sunset to 30 minutes after sunrise.

Both deployment locations were positioned near sources of ultrasonic noise (Figure 1), likely contributing to the large number of noise files in the analysis. Additionally, some noise files contained potential rodent vocalizations, which may be worth noting for future analyses. If feasible, relocating the sites away from ultrasonic noise sources is recommended. Alternatively, adjusting the recorder gain settings could help reduce noise file occurrences. In 2024, the gain was set to 12; reducing it to 0 could significantly decrease noise files and extend recorder battery life. While lower gain settings may reduce the detection of quieter species, the lack of evidence for these species this year suggests the benefits would outweigh this limitation.

![Figure 1: Examples of environmental ultrasonic noise in AC-Bats and JR-Bats sites in 2024 deployments](images/clipboard-2946309762.png)

-   **Bat monitoring enhancements**: Continuing to use a sample rate to 256 kHz is advisable, given that bat species in western Canada typically do not vocalize beyond this frequency range. The sampling rate will also optimize the total amount of data volume collected and battery usage. It is also recommended to programming the Max Time Between Calls (TBC) by adjusting the trigger window from 3 to 2 seconds. The [North American Bat Monitoring Program](https://www.nabatmonitoring.org/) offers many additional recommendations for deployment, processing and interpretation of ultrasonic data.

## Appendix A: Settings used for classifiers

### Kaleidoscope Settings

**Version:** 5.6.8

#### [Global]

- **Mode:** 0  
- **Threads:** 24  

#### [Classifier]

- **Classifier:** classifiers-Bats_of_North_America_5.4.0  
- **ROC:** 2  

**Enabled Species:**

- EPTFUS: 1  
- LASBOR: 1  
- LASNOC: 1  
- MYOLUC: 1  

#### [Analysis]
- **Frequency Minimum:** 8  
- **Frequency Maximum:** 120  
- **Duration Minimum:** 2  
- **Duration Maximum:** 40  
- **Maximum Gap:** 500  
- **Minimum Calls:** 1  
- **Filter ZC:** 1  
- **Remove DC:** 0  
- **CF Minimum Frequency:** 0  
- **CF Maximum Frequency:** 0  
- **CF Maximum Bandwidth:** 0 